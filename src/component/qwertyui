 if (['-', '+'].includes(buttonName)) {
      this.setState({
        operation: buttonName,
      }, () => {
        calculate(this.state, buttonName);
        const { total, next, operation } = this.state;
        const numberONe = parseInt(total, 10);
        const numberTwo = next === '' && (buttonName === '+' || buttonName === '-') ? '0' : parseInt(next, 10);
        this.setState({
          total: operate(numberONe, numberTwo, operation),
          next: '',
        });
      });
    } else if (buttonName === '=') {
      const { total, next, operation } = this.state;
      this.setState({
        total: operate(total, next, operation),
      }, () => {
        calculate(this.state, buttonName);
        this.setState(this.initialState(total, '', null), () => {
          this.setState({
            total: operate(total, next, operation),
          }, () => { });
        });
      });
    } else if (buttonName === '+/-') {
      this.setState((prevState) => ({
        total: calculate(prevState, buttonName).total,
        next: calculate(prevState, buttonName).next,
      }));
    } else if (buttonName === 'AC') {
      this.setState(calculate(this.initialState, buttonName), () => { });
    } else if (['x', 'รท', '%'].includes(buttonName)) {
      this.setState({
        operation: buttonName,
      }, () => {
        calculate(this.state, buttonName);
        const { total, next, operation } = this.state;
        const numberONe = parseInt(total, 10);
        const numberTwo = next === '' && (buttonName === 'รท' || buttonName === 'x' || buttonName === '%') ? '1' : parseInt(next, 10);
        this.setState({
          total: operate(numberONe, numberTwo, operation),
          next: '',
        });
      });
    } else {
      const { total, next, operation } = this.state;
      if (next === '' && total === '' && operation === null) {
        this.setState({
          total: total.concat(buttonName),
        }, () => {
          calculate(this.state, buttonName);
        });
      }

      if (next === '' && total === '0' && operation === '') {
        this.setState({
          total: total.concat(buttonName),
        }, () => {
          calculate(this.state, buttonName);
        });
      }

      if (next === '' && total !== '0' && operation === '') {
        this.setState({
          total: total.concat(buttonName),
        }, () => {
          calculate(this.state, buttonName);
        });
      }
      if (next === '' && total !== '' && operation === null) {
        this.setState({
          total: total.concat(buttonName),
        }, () => {
          calculate(this.state, buttonName);
        });
      }

      if (next === '' && total !== '' && operation !== null && operation !== '') {
        this.setState({
          next: next.concat(buttonName),
        }, () => {
          calculate(this.state, buttonName);
        });
      }
      if (next !== '' && total !== '' && operation !== null && operation !== '') {
        this.setState({
          next: next.concat(buttonName),
        }, () => {
          calculate(this.state, buttonName);
        });
      }
    }